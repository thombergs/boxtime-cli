name: Build

on:
  push:
    branches:
    - 'main'
    - 'release'
  pull_request:
    branches:
    - 'main'

permissions:
  contents: read

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:

      - name: ‚öôÔ∏è Checkout
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Gradle cache
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper

      - name: ‚öôÔ∏è Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üî® Build Alfred workflow
        if: matrix.os == 'macos-latest'
        run: |
          ./gradlew alfred
          mkdir -p build/artifacts
          mv build/native/nativeCompile/boxtime build/artifacts/macos-x64.boxtime
          mv build/alfred/Boxtime.alfredworkflow build/artifacts/macos-x64.Boxtime.alfredworkflow

      - name: üî® Build native executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./gradlew nativeCompile
          mkdir -p build/artifacts
          mv build/native/nativeCompile/boxtime build/artifacts/linux.boxtime

      - name: ‚¨ÜÔ∏è Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: build/artifacts

  test:
    runs-on: macos-latest
    steps:

      - name: ‚öôÔ∏è Checkout
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Gradle cache
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper

      - name: ‚öôÔ∏è Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üîé Run tests
        run: ./gradlew nativeTest

  version:
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.projectVersion }}
    steps:

      - name: ‚öôÔ∏è Checkout
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Gradle cache
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper

      - name: ‚öôÔ∏è Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏èÔ∏è Extract version
        id: extract_version
        run: echo "projectVersion=$(./gradlew -q printVersion)" >> $GITHUB_OUTPUT

  check-release:
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - version
    steps:

      - name: ‚úÖ Check version
        if: ${{ contains(needs.version.outputs.version, 'SNAPSHOT') }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Cannot release SNAPSHOT version!')

      - name: ‚ùå Cancel workflow
        uses: vishnudxb/cancel-workflow@v1.2
        if: failure()
        with:
          repo: octocat/hello-world
          workflow_id: ${{ github.run_id }}
          access_token: ${{ github.token }}

  release:
    if: github.ref == 'refs/heads/release'
    needs:
      - check-release
      - build
      - test
      - version
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      - name: ‚¨áÔ∏è Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: build/artifacts

      - name: üè∑Ô∏è Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ needs.version.outputs.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Please refer to the [release notes](https://github.com/thombergs/boxtime-cli/blob/main/CHANGELOG.md) for the changes in this release.
          artifacts: |
            build/artifacts/**
